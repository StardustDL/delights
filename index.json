{
  "api/delights/index.html": {
    "href": "api/delights/index.html",
    "title": "Delights API | Delights",
    "keywords": "Delights API"
  },
  "api/extensions/index.html": {
    "href": "api/extensions/index.html",
    "title": "Extension API | Delights",
    "keywords": "Extension API"
  },
  "api/modulight/index.html": {
    "href": "api/modulight/index.html",
    "title": "Modulight | Delights",
    "keywords": "Modulight Modulight is a light modular framework aimed to be low intrusive based on dependency injection for .NET 5, ASP.NET Core and Blazor. Features Dependency injection Unified services registering Client (Blazor) Unified CSS & JS lazy loading & prerendering. No need to append <script> and <link> repeatedly for every razor components, especially when use different hosting models. Unified assembly lazy loading. Interop between modules and host. Server (GraphQL cooperated with ChilliCream GraphQL Platform ) Unified query/mutation/subscription definition Builtin module options support It provides a place to unify resources, and it can be used to make Razor component library easy to use and manage. The user needn't to take care of related services and <script> or <link> tags in index.html . Usage Use modules Register modules. For Razor component & AspNet server modules: services.AddModules(builder => { builder.AddModule<FooModule>(); }); For GraphQL server modules: services.AddModules(builder => { builder.UseGraphQLServerModules().AddModule<FooModule>(); }); Additional step for AspNet server modules: // in Startup: void Configure(IApplicationBuilder app, IWebHostEnvironment env) app.UseAspNetServerModuleMiddlewares(); app.UseEndpoints(endpoints => { // modules mapper endpoints.MapAspNetServerModuleEndpoints(); endpoints.MapGraphQLServerModuleEndpoints(postMapEndpoint: (module, builder) => { builder.RequireCors(cors => { cors.AllowAnyOrigin().AllowAnyHeader().AllowAnyMethod(); }); }); // other mapper, eg: endpoints.MapControllers(); }); Additional step for GraphQL server modules: // in Startup: void Configure(IApplicationBuilder app, IWebHostEnvironment env) app.UseEndpoints(endpoints => { // modules mapper endpoints.MapGraphQLServerModuleEndpoints(postMapEndpoint: (module, builder) => { builder.RequireCors(cors => { cors.AllowAnyOrigin().AllowAnyHeader().AllowAnyMethod(); }); }); // other mapper, eg: endpoints.MapControllers(); }); Configure the module initilizing & shutdown. // in Program: Task Main(string[] args) var host = CreateHostBuilder(args).Build(); await using var _ = await host.Services.UseModuleHost(); await host.RunAsync(); For razor components, add ResourceDeclare component to App.razor to load UI resources. <Modulight.Modules.Client.RazorComponents.UI.ResourceDeclare /> This component will find all resources defined in modules, and render HTML tags for them. This works for normal cases, but if you use WebAssembly target, no prerenderring, and the component library need the javascript files to be loaded initially. You can use the following codes to load resources manually. // WebAssemblyHost host; await host.Services.GetRazorComponentClientModuleCollection().LoadResources(); Use Blazor UI Template Modulight provide a template project for Blazor hosting with Razor Component Client modules. Use package Modulight.UI.Blazor and Modulight.UI.Blazor.Hosting to try it. It provides a navigation layout generated by client modules, and supports prerendering. class CustomBlazorUIProvider : BlazorUIProvider { public CustomBlazorUIProvider(IRazorComponentClientModuleCollection razorComponentClientModuleCollection) : base(razorComponentClientModuleCollection) { } } // void ConfigureServices(IServiceCollection services) services.AddModules(builder => { builder.AddServerSideBlazorUI<CustomBlazorUIProvider>(); }); // void Configure(IApplicationBuilder app, IWebHostEnvironment env) app.UseAspNetServerModuleMiddlewares(); app.UseStaticFiles(); app.UseRouting(); app.UseEndpoints(endpoints => { endpoints.MapAspNetServerModuleEndpoints(); }); A Sample startup . Example codes They are based on nightly build package at: NUGET source Design a client (Blazor) module HelloModule.cs Client module definition. Index.razor Client module pages. It belongs to a different assembly from which Module belongs to because we want this assembly is lazy loading. Design a GraphQL server module HelloServerModule.cs GraphQL server module definition. Use a client module in Blazor websites ModulePageLayout.razor Layout and container for module pages. App.razor Lazy loading for js/css/sassemblies when routing. UIModule.cs Definition of JS/CSS resources. ModuleSetup.cs Use modules in client. Startup.cs Blazor Server hosting. Program.cs Blazor WebAssembly hosting. index.html Clean index.html. Use a GraphQL server module Startup.cs GraphQL server integrating."
  },
  "api/modulight/Modulight.Modules.Client.RazorComponents.html": {
    "href": "api/modulight/Modulight.Modules.Client.RazorComponents.html",
    "title": "Namespace Modulight.Modules.Client.RazorComponents | Delights",
    "keywords": "Namespace Modulight.Modules.Client.RazorComponents Classes RazorComponentClientModule Basic implement for IRazorComponentClientModule . RazorComponentClientModuleCollectionExtensions Extension methods for IRazorComponentClientModuleCollection . RazorComponentClientModuleExtensions Extension methods for razor component modules. Interfaces IRazorComponentClientModule Specifies the contract for razor component modules. IRazorComponentClientModuleCollection Specifies the contract for razor component module hosts."
  },
  "api/modulight/Modulight.Modules.Client.RazorComponents.IRazorComponentClientModule.html": {
    "href": "api/modulight/Modulight.Modules.Client.RazorComponents.IRazorComponentClientModule.html",
    "title": "Interface IRazorComponentClientModule | Delights",
    "keywords": "Interface IRazorComponentClientModule Specifies the contract for razor component modules. Inherited Members IModule.Initialize() IModule.Shutdown() IModule.Manifest Namespace : Modulight.Modules.Client.RazorComponents Assembly : Modulight.Modules.Client.RazorComponents.dll Syntax public interface IRazorComponentClientModule : IModule Properties GlobalComponents Get global components. Declaration Type[] GlobalComponents { get; } Property Value Type Description System.Type [] Icon Get module icon. Declaration RenderFragment Icon { get; } Property Value Type Description Microsoft.AspNetCore.Components.RenderFragment Resources Get module UI resources. Declaration UIResource[] Resources { get; } Property Value Type Description UIResource [] RootPath Get module UI route root path, such as home, search, and so on. Use System.String.Empty for no page module. Declaration string RootPath { get; } Property Value Type Description System.String Methods Contains(String) Check if a path is belongs to this module UI. Declaration bool Contains(string path) Parameters Type Name Description System.String path Route path. Returns Type Description System.Boolean"
  },
  "api/modulight/Modulight.Modules.Client.RazorComponents.IRazorComponentClientModuleCollection.html": {
    "href": "api/modulight/Modulight.Modules.Client.RazorComponents.IRazorComponentClientModuleCollection.html",
    "title": "Interface IRazorComponentClientModuleCollection | Delights",
    "keywords": "Interface IRazorComponentClientModuleCollection Specifies the contract for razor component module hosts. Inherited Members IModuleCollection<IRazorComponentClientModule>.LoadedModules IModuleCollection<IRazorComponentClientModule>.DefinedModules Namespace : Modulight.Modules.Client.RazorComponents Assembly : Modulight.Modules.Client.RazorComponents.dll Syntax public interface IRazorComponentClientModuleCollection : IModuleCollection<IRazorComponentClientModule> Methods GetAssembliesForRouting(String, Boolean, Boolean, CancellationToken) Load related assemblies for a given route. Declaration Task<List<Assembly>> GetAssembliesForRouting(string path, bool recurse = false, bool throwOnError = false, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.String path Route path. System.Boolean recurse Load dependent assemblies recursely. System.Boolean throwOnError Throw exceptions when error occurs instead of logs. System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < System.Reflection.Assembly >> LoadResources(Type) Load all defined in modules into DOM. Declaration Task LoadResources(Type moduleType = null) Parameters Type Name Description System.Type moduleType Returns Type Description System.Threading.Tasks.Task Validate() Validate modules. Check if route roots conflict or assembly loading fails. Declaration Task Validate() Returns Type Description System.Threading.Tasks.Task Extension Methods RazorComponentClientModuleCollectionExtensions.LoadResources<T>(IRazorComponentClientModuleCollection)"
  },
  "api/modulight/Modulight.Modules.Client.RazorComponents.RazorComponentClientModule.html": {
    "href": "api/modulight/Modulight.Modules.Client.RazorComponents.RazorComponentClientModule.html",
    "title": "Class RazorComponentClientModule | Delights",
    "keywords": "Class RazorComponentClientModule Basic implement for IRazorComponentClientModule . Inheritance System.Object Module RazorComponentClientModule Implements IRazorComponentClientModule IModule Inherited Members Module.Host Module.Services Module.Manifest Module.GetService<T>(IServiceProvider) Module.GetOption<T>(IServiceProvider) Module.Initialize() Module.Shutdown() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Modulight.Modules.Client.RazorComponents Assembly : Modulight.Modules.Client.RazorComponents.dll Syntax [ModuleDependency(typeof(RazorComponentClientCoreModule))] public abstract class RazorComponentClientModule : Module, IRazorComponentClientModule, IModule Constructors RazorComponentClientModule(IModuleHost) Create the instance. Declaration protected RazorComponentClientModule(IModuleHost host) Parameters Type Name Description IModuleHost host Properties GlobalComponents Get global components. Declaration public Type[] GlobalComponents { get; protected set; } Property Value Type Description System.Type [] Icon Get module icon. Declaration public virtual RenderFragment Icon { get; } Property Value Type Description Microsoft.AspNetCore.Components.RenderFragment Resources Get module UI resources. Declaration public UIResource[] Resources { get; protected set; } Property Value Type Description UIResource [] RootPath Get module UI route root path, such as home, search, and so on. Use System.String.Empty for no page module. Declaration public string RootPath { get; } Property Value Type Description System.String Methods Contains(String) Check if a path is belongs to this module UI. Declaration public virtual bool Contains(string path) Parameters Type Name Description System.String path Route path. Returns Type Description System.Boolean Implements IRazorComponentClientModule IModule"
  },
  "api/modulight/Modulight.Modules.Client.RazorComponents.RazorComponentClientModuleCollectionExtensions.html": {
    "href": "api/modulight/Modulight.Modules.Client.RazorComponents.RazorComponentClientModuleCollectionExtensions.html",
    "title": "Class RazorComponentClientModuleCollectionExtensions | Delights",
    "keywords": "Class RazorComponentClientModuleCollectionExtensions Extension methods for IRazorComponentClientModuleCollection . Inheritance System.Object RazorComponentClientModuleCollectionExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Modulight.Modules.Client.RazorComponents Assembly : Modulight.Modules.Client.RazorComponents.dll Syntax public static class RazorComponentClientModuleCollectionExtensions Methods LoadResources<T>(IRazorComponentClientModuleCollection) Load all defined in modules into DOM. Declaration public static Task LoadResources<T>(this IRazorComponentClientModuleCollection collection) where T : IModule Parameters Type Name Description IRazorComponentClientModuleCollection collection Returns Type Description System.Threading.Tasks.Task Type Parameters Name Description T"
  },
  "api/modulight/Modulight.Modules.Client.RazorComponents.RazorComponentClientModuleExtensions.html": {
    "href": "api/modulight/Modulight.Modules.Client.RazorComponents.RazorComponentClientModuleExtensions.html",
    "title": "Class RazorComponentClientModuleExtensions | Delights",
    "keywords": "Class RazorComponentClientModuleExtensions Extension methods for razor component modules. Inheritance System.Object RazorComponentClientModuleExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Modulight.Modules.Client.RazorComponents Assembly : Modulight.Modules.Client.RazorComponents.dll Syntax public static class RazorComponentClientModuleExtensions Methods GetRazorComponentClientModuleCollection(IServiceProvider) Get razor component module host from service provider. Declaration public static IRazorComponentClientModuleCollection GetRazorComponentClientModuleCollection(this IServiceProvider provider) Parameters Type Name Description System.IServiceProvider provider Returns Type Description IRazorComponentClientModuleCollection"
  },
  "api/modulight/Modulight.Modules.Client.RazorComponents.UI.BasePage.html": {
    "href": "api/modulight/Modulight.Modules.Client.RazorComponents.UI.BasePage.html",
    "title": "Class BasePage | Delights",
    "keywords": "Class BasePage Base class for module UI pages. Inheritance System.Object Microsoft.AspNetCore.Components.ComponentBase BasePage BasePage<TModule> Implements Microsoft.AspNetCore.Components.IComponent Microsoft.AspNetCore.Components.IHandleEvent Microsoft.AspNetCore.Components.IHandleAfterRender Inherited Members Microsoft.AspNetCore.Components.ComponentBase.BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder) Microsoft.AspNetCore.Components.ComponentBase.OnInitializedAsync() Microsoft.AspNetCore.Components.ComponentBase.OnParametersSet() Microsoft.AspNetCore.Components.ComponentBase.OnParametersSetAsync() Microsoft.AspNetCore.Components.ComponentBase.StateHasChanged() Microsoft.AspNetCore.Components.ComponentBase.ShouldRender() Microsoft.AspNetCore.Components.ComponentBase.OnAfterRender(System.Boolean) Microsoft.AspNetCore.Components.ComponentBase.OnAfterRenderAsync(System.Boolean) Microsoft.AspNetCore.Components.ComponentBase.InvokeAsync(System.Action) Microsoft.AspNetCore.Components.ComponentBase.InvokeAsync(System.Func<System.Threading.Tasks.Task>) Microsoft.AspNetCore.Components.ComponentBase.Microsoft.AspNetCore.Components.IComponent.Attach(Microsoft.AspNetCore.Components.RenderHandle) Microsoft.AspNetCore.Components.ComponentBase.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView) Microsoft.AspNetCore.Components.ComponentBase.Microsoft.AspNetCore.Components.IHandleEvent.HandleEventAsync(Microsoft.AspNetCore.Components.EventCallbackWorkItem, System.Object) Microsoft.AspNetCore.Components.ComponentBase.Microsoft.AspNetCore.Components.IHandleAfterRender.OnAfterRenderAsync() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Modulight.Modules.Client.RazorComponents.UI Assembly : Modulight.Modules.Client.RazorComponents.dll Syntax public abstract class BasePage : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Properties Parent Get PageParent instance. Declaration [CascadingParameter] protected PageParent Parent { get; set; } Property Value Type Description PageParent Methods GetModule() Get current page's module. Declaration public abstract IRazorComponentClientModule GetModule() Returns Type Description IRazorComponentClientModule OnInitialized() Declaration protected override void OnInitialized() Overrides Microsoft.AspNetCore.Components.ComponentBase.OnInitialized() Implements Microsoft.AspNetCore.Components.IComponent Microsoft.AspNetCore.Components.IHandleEvent Microsoft.AspNetCore.Components.IHandleAfterRender"
  },
  "api/modulight/Modulight.Modules.Client.RazorComponents.UI.BasePage-1.html": {
    "href": "api/modulight/Modulight.Modules.Client.RazorComponents.UI.BasePage-1.html",
    "title": "Class BasePage<TModule> | Delights",
    "keywords": "Class BasePage<TModule> Base class for module UI pages with typed module. Inheritance System.Object Microsoft.AspNetCore.Components.ComponentBase BasePage BasePage<TModule> Implements Microsoft.AspNetCore.Components.IComponent Microsoft.AspNetCore.Components.IHandleEvent Microsoft.AspNetCore.Components.IHandleAfterRender Inherited Members BasePage.Parent BasePage.OnInitialized() Microsoft.AspNetCore.Components.ComponentBase.BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder) Microsoft.AspNetCore.Components.ComponentBase.OnInitializedAsync() Microsoft.AspNetCore.Components.ComponentBase.OnParametersSet() Microsoft.AspNetCore.Components.ComponentBase.OnParametersSetAsync() Microsoft.AspNetCore.Components.ComponentBase.StateHasChanged() Microsoft.AspNetCore.Components.ComponentBase.ShouldRender() Microsoft.AspNetCore.Components.ComponentBase.OnAfterRender(System.Boolean) Microsoft.AspNetCore.Components.ComponentBase.OnAfterRenderAsync(System.Boolean) Microsoft.AspNetCore.Components.ComponentBase.InvokeAsync(System.Action) Microsoft.AspNetCore.Components.ComponentBase.InvokeAsync(System.Func<System.Threading.Tasks.Task>) Microsoft.AspNetCore.Components.ComponentBase.Microsoft.AspNetCore.Components.IComponent.Attach(Microsoft.AspNetCore.Components.RenderHandle) Microsoft.AspNetCore.Components.ComponentBase.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView) Microsoft.AspNetCore.Components.ComponentBase.Microsoft.AspNetCore.Components.IHandleEvent.HandleEventAsync(Microsoft.AspNetCore.Components.EventCallbackWorkItem, System.Object) Microsoft.AspNetCore.Components.ComponentBase.Microsoft.AspNetCore.Components.IHandleAfterRender.OnAfterRenderAsync() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Modulight.Modules.Client.RazorComponents.UI Assembly : Modulight.Modules.Client.RazorComponents.dll Syntax public abstract class BasePage<TModule> : BasePage, IComponent, IHandleEvent, IHandleAfterRender where TModule : IRazorComponentClientModule Type Parameters Name Description TModule Properties Module Get current page's typed module. Declaration [Inject] public TModule Module { get; set; } Property Value Type Description TModule Methods GetModule() Get current page's module. Declaration public override IRazorComponentClientModule GetModule() Returns Type Description IRazorComponentClientModule Overrides BasePage.GetModule() Implements Microsoft.AspNetCore.Components.IComponent Microsoft.AspNetCore.Components.IHandleEvent Microsoft.AspNetCore.Components.IHandleAfterRender"
  },
  "api/modulight/Modulight.Modules.Client.RazorComponents.UI.html": {
    "href": "api/modulight/Modulight.Modules.Client.RazorComponents.UI.html",
    "title": "Namespace Modulight.Modules.Client.RazorComponents.UI | Delights",
    "keywords": "Namespace Modulight.Modules.Client.RazorComponents.UI Classes BasePage Base class for module UI pages. BasePage<TModule> Base class for module UI pages with typed module. ModuleUIGlobalComponentAttribute Specifies GlobalComponents for the razor component module. ModuleUIResourceAttribute Specifies UI resources. ModuleUIRootPathAttribute Specifies RootPath for the razor component module. PageInfo A razor component to set module page title for PageParent . PageParent Container for module pages. Provide page services to interop with host UI. Interfaces IJSModuleProvider<T> Provide JS modules. Enums UIResourceType UI Resource type."
  },
  "api/modulight/Modulight.Modules.Client.RazorComponents.UI.IJSModuleProvider-1.html": {
    "href": "api/modulight/Modulight.Modules.Client.RazorComponents.UI.IJSModuleProvider-1.html",
    "title": "Interface IJSModuleProvider<T> | Delights",
    "keywords": "Interface IJSModuleProvider<T> Provide JS modules. Inherited Members System.IDisposable.Dispose() System.IAsyncDisposable.DisposeAsync() Namespace : Modulight.Modules.Client.RazorComponents.UI Assembly : Modulight.Modules.Client.RazorComponents.dll Syntax public interface IJSModuleProvider<T> : IDisposable, IAsyncDisposable Type Parameters Name Description T Methods GetJSModule(String, String) Get a lazy javascript module at /_content/ assemblyName / jsPath . Declaration Task<IJSObjectReference> GetJSModule(string jsPath, string assemblyName = null) Parameters Type Name Description System.String jsPath Javascript file path. System.String assemblyName Assembly name, null for the assembly which T defined. Returns Type Description System.Threading.Tasks.Task < Microsoft.JSInterop.IJSObjectReference >"
  },
  "api/modulight/Modulight.Modules.Client.RazorComponents.UI.ModuleUIGlobalComponentAttribute.html": {
    "href": "api/modulight/Modulight.Modules.Client.RazorComponents.UI.ModuleUIGlobalComponentAttribute.html",
    "title": "Class ModuleUIGlobalComponentAttribute | Delights",
    "keywords": "Class ModuleUIGlobalComponentAttribute Specifies GlobalComponents for the razor component module. Inheritance System.Object System.Attribute ModuleUIGlobalComponentAttribute Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Modulight.Modules.Client.RazorComponents.UI Assembly : Modulight.Modules.Client.RazorComponents.dll Syntax [AttributeUsage(AttributeTargets.Class, AllowMultiple = true, Inherited = false)] public class ModuleUIGlobalComponentAttribute : Attribute Constructors ModuleUIGlobalComponentAttribute(Type) Specifies GlobalComponents for the razor component module. Declaration public ModuleUIGlobalComponentAttribute(Type type) Parameters Type Name Description System.Type type Properties Type Root path. Declaration public Type Type { get; } Property Value Type Description System.Type"
  },
  "api/modulight/Modulight.Modules.Client.RazorComponents.UI.ModuleUIResourceAttribute.html": {
    "href": "api/modulight/Modulight.Modules.Client.RazorComponents.UI.ModuleUIResourceAttribute.html",
    "title": "Class ModuleUIResourceAttribute | Delights",
    "keywords": "Class ModuleUIResourceAttribute Specifies UI resources. Inheritance System.Object System.Attribute ModuleUIResourceAttribute Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Modulight.Modules.Client.RazorComponents.UI Assembly : Modulight.Modules.Client.RazorComponents.dll Syntax [AttributeUsage(AttributeTargets.Class, AllowMultiple = true, Inherited = false)] public class ModuleUIResourceAttribute : Attribute Constructors ModuleUIResourceAttribute(UIResourceType, String) Specifies UI resources. Declaration public ModuleUIResourceAttribute(UIResourceType type, string path) Parameters Type Name Description UIResourceType type System.String path Properties Attributes Attributes for the resource. Declaration public string[] Attributes { get; } Property Value Type Description System.String [] Path Resource relative path. Declaration public string Path { get; } Property Value Type Description System.String Type Resource type. Declaration public UIResourceType Type { get; } Property Value Type Description UIResourceType"
  },
  "api/modulight/Modulight.Modules.Client.RazorComponents.UI.ModuleUIRootPathAttribute.html": {
    "href": "api/modulight/Modulight.Modules.Client.RazorComponents.UI.ModuleUIRootPathAttribute.html",
    "title": "Class ModuleUIRootPathAttribute | Delights",
    "keywords": "Class ModuleUIRootPathAttribute Specifies RootPath for the razor component module. Inheritance System.Object System.Attribute ModuleUIRootPathAttribute Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Modulight.Modules.Client.RazorComponents.UI Assembly : Modulight.Modules.Client.RazorComponents.dll Syntax [AttributeUsage(AttributeTargets.Class, AllowMultiple = false, Inherited = false)] public class ModuleUIRootPathAttribute : Attribute Constructors ModuleUIRootPathAttribute(String) Specifies RootPath for the razor component module. Declaration public ModuleUIRootPathAttribute(string rootPath) Parameters Type Name Description System.String rootPath Properties RootPath Root path. Declaration public string RootPath { get; } Property Value Type Description System.String"
  },
  "api/modulight/Modulight.Modules.Client.RazorComponents.UI.PageInfo.html": {
    "href": "api/modulight/Modulight.Modules.Client.RazorComponents.UI.PageInfo.html",
    "title": "Class PageInfo | Delights",
    "keywords": "Class PageInfo A razor component to set module page title for PageParent . Inheritance System.Object Microsoft.AspNetCore.Components.ComponentBase PageInfo Implements Microsoft.AspNetCore.Components.IComponent Microsoft.AspNetCore.Components.IHandleEvent Microsoft.AspNetCore.Components.IHandleAfterRender Inherited Members Microsoft.AspNetCore.Components.ComponentBase.BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder) Microsoft.AspNetCore.Components.ComponentBase.OnInitialized() Microsoft.AspNetCore.Components.ComponentBase.OnInitializedAsync() Microsoft.AspNetCore.Components.ComponentBase.OnParametersSetAsync() Microsoft.AspNetCore.Components.ComponentBase.StateHasChanged() Microsoft.AspNetCore.Components.ComponentBase.ShouldRender() Microsoft.AspNetCore.Components.ComponentBase.OnAfterRender(System.Boolean) Microsoft.AspNetCore.Components.ComponentBase.OnAfterRenderAsync(System.Boolean) Microsoft.AspNetCore.Components.ComponentBase.InvokeAsync(System.Action) Microsoft.AspNetCore.Components.ComponentBase.InvokeAsync(System.Func<System.Threading.Tasks.Task>) Microsoft.AspNetCore.Components.ComponentBase.Microsoft.AspNetCore.Components.IComponent.Attach(Microsoft.AspNetCore.Components.RenderHandle) Microsoft.AspNetCore.Components.ComponentBase.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView) Microsoft.AspNetCore.Components.ComponentBase.Microsoft.AspNetCore.Components.IHandleEvent.HandleEventAsync(Microsoft.AspNetCore.Components.EventCallbackWorkItem, System.Object) Microsoft.AspNetCore.Components.ComponentBase.Microsoft.AspNetCore.Components.IHandleAfterRender.OnAfterRenderAsync() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Modulight.Modules.Client.RazorComponents.UI Assembly : Modulight.Modules.Client.RazorComponents.dll Syntax public class PageInfo : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Properties Breadcrumb Set Breadcrumb . Declaration [Parameter] public RenderFragment Breadcrumb { get; set; } Property Value Type Description Microsoft.AspNetCore.Components.RenderFragment Footer Set Footer . Declaration [Parameter] public RenderFragment Footer { get; set; } Property Value Type Description Microsoft.AspNetCore.Components.RenderFragment HeaderContent Set HeaderContent . Declaration [Parameter] public RenderFragment HeaderContent { get; set; } Property Value Type Description Microsoft.AspNetCore.Components.RenderFragment HeaderExtra Set HeaderExtra . Declaration [Parameter] public RenderFragment HeaderExtra { get; set; } Property Value Type Description Microsoft.AspNetCore.Components.RenderFragment HeaderFooter Set HeaderFooter . Declaration [Parameter] public RenderFragment HeaderFooter { get; set; } Property Value Type Description Microsoft.AspNetCore.Components.RenderFragment Icon Set Icon . Declaration [Parameter] public string Icon { get; set; } Property Value Type Description System.String IconFragment Set IconFragment . Declaration [Parameter] public RenderFragment IconFragment { get; set; } Property Value Type Description Microsoft.AspNetCore.Components.RenderFragment Parent Get PageParent instance. Declaration [CascadingParameter] protected PageParent Parent { get; set; } Property Value Type Description PageParent SubtitleFragment Set SubtitleFragment . Declaration [Parameter] public RenderFragment SubtitleFragment { get; set; } Property Value Type Description Microsoft.AspNetCore.Components.RenderFragment Tags Set Tags . Declaration [Parameter] public RenderFragment Tags { get; set; } Property Value Type Description Microsoft.AspNetCore.Components.RenderFragment Title Set Title . Declaration [Parameter] public string Title { get; set; } Property Value Type Description System.String TitleFragment Set TitleFragment . Declaration [Parameter] public RenderFragment TitleFragment { get; set; } Property Value Type Description Microsoft.AspNetCore.Components.RenderFragment Methods OnParametersSet() Declaration protected override void OnParametersSet() Overrides Microsoft.AspNetCore.Components.ComponentBase.OnParametersSet() Implements Microsoft.AspNetCore.Components.IComponent Microsoft.AspNetCore.Components.IHandleEvent Microsoft.AspNetCore.Components.IHandleAfterRender"
  },
  "api/modulight/Modulight.Modules.Client.RazorComponents.UI.PageParent.html": {
    "href": "api/modulight/Modulight.Modules.Client.RazorComponents.UI.PageParent.html",
    "title": "Class PageParent | Delights",
    "keywords": "Class PageParent Container for module pages. Provide page services to interop with host UI. Inheritance System.Object Microsoft.AspNetCore.Components.ComponentBase PageParent Implements Microsoft.AspNetCore.Components.IComponent Microsoft.AspNetCore.Components.IHandleEvent Microsoft.AspNetCore.Components.IHandleAfterRender Inherited Members Microsoft.AspNetCore.Components.ComponentBase.BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder) Microsoft.AspNetCore.Components.ComponentBase.OnInitialized() Microsoft.AspNetCore.Components.ComponentBase.OnInitializedAsync() Microsoft.AspNetCore.Components.ComponentBase.OnParametersSet() Microsoft.AspNetCore.Components.ComponentBase.OnParametersSetAsync() Microsoft.AspNetCore.Components.ComponentBase.StateHasChanged() Microsoft.AspNetCore.Components.ComponentBase.ShouldRender() Microsoft.AspNetCore.Components.ComponentBase.OnAfterRender(System.Boolean) Microsoft.AspNetCore.Components.ComponentBase.OnAfterRenderAsync(System.Boolean) Microsoft.AspNetCore.Components.ComponentBase.InvokeAsync(System.Action) Microsoft.AspNetCore.Components.ComponentBase.InvokeAsync(System.Func<System.Threading.Tasks.Task>) Microsoft.AspNetCore.Components.ComponentBase.Microsoft.AspNetCore.Components.IComponent.Attach(Microsoft.AspNetCore.Components.RenderHandle) Microsoft.AspNetCore.Components.ComponentBase.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView) Microsoft.AspNetCore.Components.ComponentBase.Microsoft.AspNetCore.Components.IHandleEvent.HandleEventAsync(Microsoft.AspNetCore.Components.EventCallbackWorkItem, System.Object) Microsoft.AspNetCore.Components.ComponentBase.Microsoft.AspNetCore.Components.IHandleAfterRender.OnAfterRenderAsync() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Modulight.Modules.Client.RazorComponents.UI Assembly : Modulight.Modules.Client.RazorComponents.dll Syntax public class PageParent : ComponentBase, IComponent, IHandleEvent, IHandleAfterRender Properties Breadcrumb Get or set page header breadcrumb render fragment. Declaration public RenderFragment Breadcrumb { get; set; } Property Value Type Description Microsoft.AspNetCore.Components.RenderFragment Footer Get or set page footer render fragment. Declaration public RenderFragment Footer { get; set; } Property Value Type Description Microsoft.AspNetCore.Components.RenderFragment HeaderContent Get or set page header content render fragment. Declaration public RenderFragment HeaderContent { get; set; } Property Value Type Description Microsoft.AspNetCore.Components.RenderFragment HeaderExtra Get or set page header extra render fragment. Declaration public RenderFragment HeaderExtra { get; set; } Property Value Type Description Microsoft.AspNetCore.Components.RenderFragment HeaderFooter Get or set page header's footer render fragment. Declaration public RenderFragment HeaderFooter { get; set; } Property Value Type Description Microsoft.AspNetCore.Components.RenderFragment Icon Get or set page icon. Declaration public string Icon { get; set; } Property Value Type Description System.String IconFragment Get or set page icon render fragment. Declaration public RenderFragment IconFragment { get; set; } Property Value Type Description Microsoft.AspNetCore.Components.RenderFragment Module Get or set current module. Declaration public IRazorComponentClientModule Module { get; set; } Property Value Type Description IRazorComponentClientModule SubtitleFragment Get or set page header subtitle render fragment. Declaration public RenderFragment SubtitleFragment { get; set; } Property Value Type Description Microsoft.AspNetCore.Components.RenderFragment Tags Get or set page header tags render fragment. Declaration public RenderFragment Tags { get; set; } Property Value Type Description Microsoft.AspNetCore.Components.RenderFragment Title Get or set page title. Declaration public string Title { get; set; } Property Value Type Description System.String TitleFragment Get or set page header title render fragment. Declaration public RenderFragment TitleFragment { get; set; } Property Value Type Description Microsoft.AspNetCore.Components.RenderFragment Implements Microsoft.AspNetCore.Components.IComponent Microsoft.AspNetCore.Components.IHandleEvent Microsoft.AspNetCore.Components.IHandleAfterRender"
  },
  "api/modulight/Modulight.Modules.Client.RazorComponents.UI.UIResourceType.html": {
    "href": "api/modulight/Modulight.Modules.Client.RazorComponents.UI.UIResourceType.html",
    "title": "Enum UIResourceType | Delights",
    "keywords": "Enum UIResourceType UI Resource type. Namespace : Modulight.Modules.Client.RazorComponents.UI Assembly : Modulight.Modules.Client.RazorComponents.dll Syntax public enum UIResourceType Fields Name Description Assembly Assembly Script Javascript StyleSheet Style sheet"
  },
  "api/modulight/Modulight.Modules.Hosting.html": {
    "href": "api/modulight/Modulight.Modules.Hosting.html",
    "title": "Namespace Modulight.Modules.Hosting | Delights",
    "keywords": "Namespace Modulight.Modules.Hosting Classes ModuleHostBuilder Default methods for module host builders. ModuleHostBuilderPlugin Empty implementation for IModuleHostBuilderPlugin . ModuleHostExtensions Extensions for module host. ModuleHostFilter<TModule> Filter modules in exact type. Interfaces IModuleCollection<TModule> A collection of typed modules. IModuleHost Specifies the contract for module hosts. IModuleHostBuilder Specifies the contract for module host builder. IModuleHostBuilderPlugin Plugin for IModuleHostBuilder ."
  },
  "api/modulight/Modulight.Modules.Hosting.IModuleCollection-1.html": {
    "href": "api/modulight/Modulight.Modules.Hosting.IModuleCollection-1.html",
    "title": "Interface IModuleCollection<TModule> | Delights",
    "keywords": "Interface IModuleCollection<TModule> A collection of typed modules. Namespace : Modulight.Modules.Hosting Assembly : Modulight.Modules.Core.dll Syntax public interface IModuleCollection<TModule> where TModule : IModule Type Parameters Name Description TModule Base module type. Properties DefinedModules Get all defined module types. Declaration IEnumerable<Type> DefinedModules { get; } Property Value Type Description System.Collections.Generic.IEnumerable < System.Type > LoadedModules Get all loaded modules. Declaration IEnumerable<TModule> LoadedModules { get; } Property Value Type Description System.Collections.Generic.IEnumerable <TModule>"
  },
  "api/modulight/Modulight.Modules.Hosting.IModuleHost.html": {
    "href": "api/modulight/Modulight.Modules.Hosting.IModuleHost.html",
    "title": "Interface IModuleHost | Delights",
    "keywords": "Interface IModuleHost Specifies the contract for module hosts. Inherited Members IModuleCollection<IModule>.LoadedModules IModuleCollection<IModule>.DefinedModules Namespace : Modulight.Modules.Hosting Assembly : Modulight.Modules.Core.dll Syntax public interface IModuleHost : IModuleCollection<IModule> Properties Services Service provider. Declaration IServiceProvider Services { get; } Property Value Type Description System.IServiceProvider Methods GetLogger<TModule>() Get logger for the module. Declaration ILogger<TModule> GetLogger<TModule>() Returns Type Description Microsoft.Extensions.Logging.ILogger <TModule> Type Parameters Name Description TModule GetManifest(Type) Get manifest for the module. Declaration ModuleManifest GetManifest(Type moduleType) Parameters Type Name Description System.Type moduleType Returns Type Description ModuleManifest GetModule(Type) Get the module instance with module type. Declaration IModule GetModule(Type moduleType) Parameters Type Name Description System.Type moduleType Returns Type Description IModule GetOption<T>(IServiceProvider, Type) Get option that belongs to the module. Declaration T GetOption<T>(IServiceProvider provider, Type moduleType) where T : class Parameters Type Name Description System.IServiceProvider provider System.Type moduleType Returns Type Description T Type Parameters Name Description T GetService<T>(IServiceProvider, Type) Get service that belongs to the module. Declaration T GetService<T>(IServiceProvider provider, Type moduleType) Parameters Type Name Description System.IServiceProvider provider System.Type moduleType Returns Type Description T Type Parameters Name Description T Initialize() Initialize the module. Declaration Task Initialize() Returns Type Description System.Threading.Tasks.Task Shutdown() Shutdown the module. Declaration Task Shutdown() Returns Type Description System.Threading.Tasks.Task Extension Methods ModuleHostExtensions.GetManifest<TModule>(IModuleHost) ModuleHostExtensions.GetModule<T>(IModuleHost) ModuleHostExtensions.GetService<TModule, T>(IModuleHost, IServiceProvider) ModuleHostExtensions.GetOption<TModule, T>(IModuleHost, IServiceProvider) ModuleHostAssert.HasModule(IModuleHost, Type) ModuleHostAssert.HasModule<T>(IModuleHost) ModuleHostAssert.EnsureGetLoadedModule<T>(IModuleHost) ModuleHostAssert.HasLoadedModule(IModuleHost, Type) ModuleHostAssert.HasLoadedModule<T>(IModuleHost) ModuleHostAssert.HasService(IModuleHost, Type) ModuleHostAssert.HasService<T>(IModuleHost) ModuleHostAssert.EnsureGetService<T>(IModuleHost) ModuleHostAssert.HasDependencies<T>(IModuleHost) ModuleHostAssert.HasServices<T>(IModuleHost) ContextExtensions.GetBuilderLog(IModuleHost)"
  },
  "api/modulight/Modulight.Modules.Hosting.IModuleHostBuilder.html": {
    "href": "api/modulight/Modulight.Modules.Hosting.IModuleHostBuilder.html",
    "title": "Interface IModuleHostBuilder | Delights",
    "keywords": "Interface IModuleHostBuilder Specifies the contract for module host builder. Namespace : Modulight.Modules.Hosting Assembly : Modulight.Modules.Core.dll Syntax public interface IModuleHostBuilder Properties Modules Get all registered modules. Declaration IReadOnlyList<Type> Modules { get; } Property Value Type Description System.Collections.Generic.IReadOnlyList < System.Type > Plugins Get all registered plugins. Declaration IReadOnlyList<Type> Plugins { get; } Property Value Type Description System.Collections.Generic.IReadOnlyList < System.Type > Methods AddModule(Type) Add module in given type. Declaration IModuleHostBuilder AddModule(Type type) Parameters Type Name Description System.Type type Module type. Returns Type Description IModuleHostBuilder Build(IServiceCollection, IServiceCollection) Build the modules and the module host in service collection. Declaration void Build(IServiceCollection services, IServiceCollection builderServices = null) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services Target service collection. Microsoft.Extensions.DependencyInjection.IServiceCollection builderServices Service collection for builder. ConfigureBuilderServices(Action<IServiceCollection>) Configure the services for the builder, also for all IModuleHostBuilderPlugin and IModuleStartup . Declaration IModuleHostBuilder ConfigureBuilderServices(Action<IServiceCollection> configureBuilderServices) Parameters Type Name Description System.Action < Microsoft.Extensions.DependencyInjection.IServiceCollection > configureBuilderServices Returns Type Description IModuleHostBuilder ConfigureServices(Action<IServiceCollection>) Configure the services for the target Microsoft.Extensions.DependencyInjection.IServiceCollection . Declaration IModuleHostBuilder ConfigureServices(Action<IServiceCollection> configureServices) Parameters Type Name Description System.Action < Microsoft.Extensions.DependencyInjection.IServiceCollection > configureServices Returns Type Description IModuleHostBuilder UsePlugin(Type) Add plugin in given type. Declaration IModuleHostBuilder UsePlugin(Type type) Parameters Type Name Description System.Type type Plugin type. Returns Type Description IModuleHostBuilder Extension Methods ModuleHostExtensions.AddModule<T>(IModuleHostBuilder) ModuleHostExtensions.UsePlugin<T>(IModuleHostBuilder) ModuleHostExtensions.ConfigureBuilderOptions<T>(IModuleHostBuilder, Action<T, IServiceProvider>) ModuleHostExtensions.ConfigureOptions<T>(IModuleHostBuilder, Action<T, IServiceProvider>) GraphQLServerModuleExtensions.UseGraphQLServerModules(IModuleHostBuilder)"
  },
  "api/modulight/Modulight.Modules.Hosting.IModuleHostBuilderPlugin.html": {
    "href": "api/modulight/Modulight.Modules.Hosting.IModuleHostBuilderPlugin.html",
    "title": "Interface IModuleHostBuilderPlugin | Delights",
    "keywords": "Interface IModuleHostBuilderPlugin Plugin for IModuleHostBuilder . Namespace : Modulight.Modules.Hosting Assembly : Modulight.Modules.Core.dll Syntax public interface IModuleHostBuilderPlugin Methods AfterBuild(ModuleDefinition[], IServiceCollection) Do after the host builded. Declaration void AfterBuild(ModuleDefinition[] modules, IServiceCollection services) Parameters Type Name Description ModuleDefinition [] modules Microsoft.Extensions.DependencyInjection.IServiceCollection services AfterModule(ModuleDefinition, IServiceCollection) Do after the module registered. Declaration void AfterModule(ModuleDefinition module, IServiceCollection services) Parameters Type Name Description ModuleDefinition module Microsoft.Extensions.DependencyInjection.IServiceCollection services BeforeBuild(IList<Type>, IServiceCollection) Do before the host is building. Declaration void BeforeBuild(IList<Type> modules, IServiceCollection services) Parameters Type Name Description System.Collections.Generic.IList < System.Type > modules Microsoft.Extensions.DependencyInjection.IServiceCollection services BeforeModule(ModuleDefinition, IServiceCollection) Do before the module is registering. Declaration void BeforeModule(ModuleDefinition module, IServiceCollection services) Parameters Type Name Description ModuleDefinition module Microsoft.Extensions.DependencyInjection.IServiceCollection services"
  },
  "api/modulight/Modulight.Modules.Hosting.ModuleHostBuilder.html": {
    "href": "api/modulight/Modulight.Modules.Hosting.ModuleHostBuilder.html",
    "title": "Class ModuleHostBuilder | Delights",
    "keywords": "Class ModuleHostBuilder Default methods for module host builders. Inheritance System.Object ModuleHostBuilder Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Modulight.Modules.Hosting Assembly : Modulight.Modules.Core.dll Syntax public static class ModuleHostBuilder Methods CreateDefaultBuilder() Create a defualt module host builder. Declaration public static IModuleHostBuilder CreateDefaultBuilder() Returns Type Description IModuleHostBuilder"
  },
  "api/modulight/Modulight.Modules.Hosting.ModuleHostBuilderPlugin.html": {
    "href": "api/modulight/Modulight.Modules.Hosting.ModuleHostBuilderPlugin.html",
    "title": "Class ModuleHostBuilderPlugin | Delights",
    "keywords": "Class ModuleHostBuilderPlugin Empty implementation for IModuleHostBuilderPlugin . Inheritance System.Object ModuleHostBuilderPlugin Implements IModuleHostBuilderPlugin Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Modulight.Modules.Hosting Assembly : Modulight.Modules.Core.dll Syntax public abstract class ModuleHostBuilderPlugin : IModuleHostBuilderPlugin Methods AfterBuild(ModuleDefinition[], IServiceCollection) Do after the host builded. Declaration public virtual void AfterBuild(ModuleDefinition[] modules, IServiceCollection services) Parameters Type Name Description ModuleDefinition [] modules Microsoft.Extensions.DependencyInjection.IServiceCollection services AfterModule(ModuleDefinition, IServiceCollection) Do after the module registered. Declaration public virtual void AfterModule(ModuleDefinition module, IServiceCollection services) Parameters Type Name Description ModuleDefinition module Microsoft.Extensions.DependencyInjection.IServiceCollection services BeforeBuild(IList<Type>, IServiceCollection) Do before the host is building. Declaration public virtual void BeforeBuild(IList<Type> modules, IServiceCollection services) Parameters Type Name Description System.Collections.Generic.IList < System.Type > modules Microsoft.Extensions.DependencyInjection.IServiceCollection services BeforeModule(ModuleDefinition, IServiceCollection) Do before the module is registering. Declaration public virtual void BeforeModule(ModuleDefinition module, IServiceCollection services) Parameters Type Name Description ModuleDefinition module Microsoft.Extensions.DependencyInjection.IServiceCollection services Implements IModuleHostBuilderPlugin"
  },
  "api/modulight/Modulight.Modules.Hosting.ModuleHostExtensions.html": {
    "href": "api/modulight/Modulight.Modules.Hosting.ModuleHostExtensions.html",
    "title": "Class ModuleHostExtensions | Delights",
    "keywords": "Class ModuleHostExtensions Extensions for module host. Inheritance System.Object ModuleHostExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Modulight.Modules.Hosting Assembly : Modulight.Modules.Core.dll Syntax public static class ModuleHostExtensions Methods AddModule<T>(IModuleHostBuilder) Add a typed module. Declaration public static IModuleHostBuilder AddModule<T>(this IModuleHostBuilder builder) where T : IModule Parameters Type Name Description IModuleHostBuilder builder Module host builder. Returns Type Description IModuleHostBuilder Type Parameters Name Description T Module type. AddModules(IServiceCollection, IModuleHostBuilder) Add Modulight module services. Declaration public static IServiceCollection AddModules(this IServiceCollection services, IModuleHostBuilder builder) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services IModuleHostBuilder builder Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection AddModules(IServiceCollection, Action<IModuleHostBuilder>) Add Modulight module services. Declaration public static IServiceCollection AddModules(this IServiceCollection services, Action<IModuleHostBuilder> configureBuilder = null) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services System.Action < IModuleHostBuilder > configureBuilder Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection ConfigureBuilderOptions<T>(IModuleHostBuilder, Action<T, IServiceProvider>) Configure builder options. Declaration public static IModuleHostBuilder ConfigureBuilderOptions<T>(this IModuleHostBuilder builder, Action<T, IServiceProvider> configureOptions) where T : class Parameters Type Name Description IModuleHostBuilder builder System.Action <T, System.IServiceProvider > configureOptions Returns Type Description IModuleHostBuilder Type Parameters Name Description T ConfigureOptions<T>(IModuleHostBuilder, Action<T, IServiceProvider>) Configure options for target services. Declaration public static IModuleHostBuilder ConfigureOptions<T>(this IModuleHostBuilder builder, Action<T, IServiceProvider> configureOptions) where T : class Parameters Type Name Description IModuleHostBuilder builder System.Action <T, System.IServiceProvider > configureOptions Returns Type Description IModuleHostBuilder Type Parameters Name Description T GetManifest<TModule>(IModuleHost) Get manifest for the module. Declaration public static ModuleManifest GetManifest<TModule>(this IModuleHost host) where TModule : IModule Parameters Type Name Description IModuleHost host Returns Type Description ModuleManifest Type Parameters Name Description TModule GetModule<T>(IModuleHost) Get the module instance with module type. Declaration public static T GetModule<T>(this IModuleHost host) where T : IModule Parameters Type Name Description IModuleHost host Returns Type Description T Type Parameters Name Description T GetModuleHost(IServiceProvider) Get default module host from service provider. Declaration public static IModuleHost GetModuleHost(this IServiceProvider services) Parameters Type Name Description System.IServiceProvider services Returns Type Description IModuleHost GetOption<TModule, T>(IModuleHost, IServiceProvider) Get option that belongs to the module. Declaration public static T GetOption<TModule, T>(this IModuleHost host, IServiceProvider provider) where TModule : IModule where T : class Parameters Type Name Description IModuleHost host System.IServiceProvider provider Returns Type Description T Type Parameters Name Description TModule T GetService<TModule, T>(IModuleHost, IServiceProvider) Get service that belongs to the module. Declaration public static T GetService<TModule, T>(this IModuleHost host, IServiceProvider provider) where TModule : IModule Parameters Type Name Description IModuleHost host System.IServiceProvider provider Returns Type Description T Type Parameters Name Description TModule T UseModuleHost(IServiceProvider) Create a context to control module host initializing, shutdown. For example: await using var _ = await services.UseModuleHost(); Declaration public static Task<IAsyncDisposable> UseModuleHost(this IServiceProvider services) Parameters Type Name Description System.IServiceProvider services Returns Type Description System.Threading.Tasks.Task < System.IAsyncDisposable > UsePlugin<T>(IModuleHostBuilder) Add a typed plugin. Declaration public static IModuleHostBuilder UsePlugin<T>(this IModuleHostBuilder builder) where T : IModuleHostBuilderPlugin Parameters Type Name Description IModuleHostBuilder builder Returns Type Description IModuleHostBuilder Type Parameters Name Description T"
  },
  "api/modulight/Modulight.Modules.Hosting.ModuleHostFilter-1.html": {
    "href": "api/modulight/Modulight.Modules.Hosting.ModuleHostFilter-1.html",
    "title": "Class ModuleHostFilter<TModule> | Delights",
    "keywords": "Class ModuleHostFilter<TModule> Filter modules in exact type. Inheritance System.Object ModuleHostFilter<TModule> Implements IModuleCollection <TModule> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Modulight.Modules.Hosting Assembly : Modulight.Modules.Core.dll Syntax public class ModuleHostFilter<TModule> : IModuleCollection<TModule> where TModule : IModule Type Parameters Name Description TModule Constructors ModuleHostFilter(IModuleHost) Create the filter instance. Declaration public ModuleHostFilter(IModuleHost host) Parameters Type Name Description IModuleHost host Properties DefinedModules Get all defined module types. Declaration public IEnumerable<Type> DefinedModules { get; } Property Value Type Description System.Collections.Generic.IEnumerable < System.Type > Host The inner IModuleHost . Declaration public IModuleHost Host { get; } Property Value Type Description IModuleHost LoadedModules Get all loaded modules. Declaration public IEnumerable<TModule> LoadedModules { get; } Property Value Type Description System.Collections.Generic.IEnumerable <TModule> Implements IModuleCollection<TModule>"
  },
  "api/modulight/Modulight.Modules.html": {
    "href": "api/modulight/Modulight.Modules.html",
    "title": "Namespace Modulight.Modules | Delights",
    "keywords": "Namespace Modulight.Modules Classes Module Basic implementation for IModule , cooperated with IModuleHost . ModuleAttribute Specifies the manifest for the module. ModuleDependencyAttribute Specifies the dependency for the module. ModuleExtensions Extension methods for modules. ModuleOptionAttribute Specifies the option for the module. ModuleServiceAttribute Specifies the service for the module. ModuleStartup Empty implementation for IModuleStartup . ModuleStartupAttribute Specifies the startup for the module. Interfaces IModule Specifies the contract for modules. IModuleManifestBuilder Specifies the interface to build a module manifest. IModuleStartup Startup for module (needs to be no-state, no disposable). Enums ServiceRegisterBehavior Behavior when the service been added."
  },
  "api/modulight/Modulight.Modules.IModule.html": {
    "href": "api/modulight/Modulight.Modules.IModule.html",
    "title": "Interface IModule | Delights",
    "keywords": "Interface IModule Specifies the contract for modules. Namespace : Modulight.Modules Assembly : Modulight.Modules.Core.dll Syntax public interface IModule Properties Manifest Get the module manifest. Declaration ModuleManifest Manifest { get; } Property Value Type Description ModuleManifest Methods Initialize() Initialize the module. Declaration Task Initialize() Returns Type Description System.Threading.Tasks.Task Shutdown() Shutdown the module. Declaration Task Shutdown() Returns Type Description System.Threading.Tasks.Task"
  },
  "api/modulight/Modulight.Modules.IModuleManifestBuilder.html": {
    "href": "api/modulight/Modulight.Modules.IModuleManifestBuilder.html",
    "title": "Interface IModuleManifestBuilder | Delights",
    "keywords": "Interface IModuleManifestBuilder Specifies the interface to build a module manifest. Namespace : Modulight.Modules Assembly : Modulight.Modules.Core.dll Syntax public interface IModuleManifestBuilder Properties Author Author Declaration string Author { get; set; } Property Value Type Description System.String Dependencies Dependencies Declaration IList<Type> Dependencies { get; } Property Value Type Description System.Collections.Generic.IList < System.Type > Description Description Declaration string Description { get; set; } Property Value Type Description System.String DisplayName Display name Declaration string DisplayName { get; set; } Property Value Type Description System.String Name Name Declaration string Name { get; set; } Property Value Type Description System.String Options Options Declaration IList<Type> Options { get; } Property Value Type Description System.Collections.Generic.IList < System.Type > Services Services Declaration IList<ModuleServiceDescriptor> Services { get; } Property Value Type Description System.Collections.Generic.IList < ModuleServiceDescriptor > Url Project URL Declaration string Url { get; set; } Property Value Type Description System.String Version Version Declaration string Version { get; set; } Property Value Type Description System.String Methods Build() Build the manifest. Declaration ModuleManifest Build() Returns Type Description ModuleManifest Extension Methods ModuleExtensions.WithService(IModuleManifestBuilder, ModuleServiceDescriptor) ModuleExtensions.WithOption(IModuleManifestBuilder, Type) ModuleExtensions.WithOption<T>(IModuleManifestBuilder) ModuleExtensions.WithDependency(IModuleManifestBuilder, Type) ModuleExtensions.WithDependency<T>(IModuleManifestBuilder) ModuleExtensions.WithDefaultsFromModuleType(IModuleManifestBuilder, Type)"
  },
  "api/modulight/Modulight.Modules.IModuleStartup.html": {
    "href": "api/modulight/Modulight.Modules.IModuleStartup.html",
    "title": "Interface IModuleStartup | Delights",
    "keywords": "Interface IModuleStartup Startup for module (needs to be no-state, no disposable). Namespace : Modulight.Modules Assembly : Modulight.Modules.Core.dll Syntax public interface IModuleStartup Methods ConfigureManifest(IModuleManifestBuilder) Configure the module manifest. Declaration void ConfigureManifest(IModuleManifestBuilder builder) Parameters Type Name Description IModuleManifestBuilder builder ConfigureServices(IServiceCollection) Configure the target services. Declaration void ConfigureServices(IServiceCollection services) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services"
  },
  "api/modulight/Modulight.Modules.Module.html": {
    "href": "api/modulight/Modulight.Modules.Module.html",
    "title": "Class Module | Delights",
    "keywords": "Class Module Basic implementation for IModule , cooperated with IModuleHost . Inheritance System.Object Module RazorComponentClientModule AspNetServerModule GraphQLServerModule Implements IModule Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Modulight.Modules Assembly : Modulight.Modules.Core.dll Syntax public abstract class Module : IModule Constructors Module(IModuleHost) Create module instance. Declaration protected Module(IModuleHost host) Parameters Type Name Description IModuleHost host Properties Host Get the module host. Declaration public IModuleHost Host { get; } Property Value Type Description IModuleHost Manifest Get the module manifest. Declaration public ModuleManifest Manifest { get; } Property Value Type Description ModuleManifest Services Get the service provider. Declaration public IServiceProvider Services { get; } Property Value Type Description System.IServiceProvider Methods GetOption<T>(IServiceProvider) Declaration public T GetOption<T>(IServiceProvider provider) where T : class Parameters Type Name Description System.IServiceProvider provider Returns Type Description T Type Parameters Name Description T GetService<T>(IServiceProvider) Declaration public T GetService<T>(IServiceProvider provider) Parameters Type Name Description System.IServiceProvider provider Returns Type Description T Type Parameters Name Description T Initialize() Initialize the module. Declaration public virtual Task Initialize() Returns Type Description System.Threading.Tasks.Task Shutdown() Shutdown the module. Declaration public virtual Task Shutdown() Returns Type Description System.Threading.Tasks.Task Implements IModule"
  },
  "api/modulight/Modulight.Modules.ModuleAttribute.html": {
    "href": "api/modulight/Modulight.Modules.ModuleAttribute.html",
    "title": "Class ModuleAttribute | Delights",
    "keywords": "Class ModuleAttribute Specifies the manifest for the module. Inheritance System.Object System.Attribute ModuleAttribute Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Modulight.Modules Assembly : Modulight.Modules.Core.dll Syntax [AttributeUsage(AttributeTargets.Class, AllowMultiple = false, Inherited = false)] public class ModuleAttribute : Attribute Constructors ModuleAttribute() Set module manifest. Declaration public ModuleAttribute() ModuleAttribute(String) Set module manifest. Declaration public ModuleAttribute(string name = null) Parameters Type Name Description System.String name Properties Author Author Declaration public string Author { get; } Property Value Type Description System.String Description Description Declaration public string Description { get; } Property Value Type Description System.String DisplayName Display name Declaration public string DisplayName { get; } Property Value Type Description System.String Name Name Declaration public string Name { get; } Property Value Type Description System.String Url Project URL Declaration public string Url { get; } Property Value Type Description System.String Version Version Declaration public string Version { get; } Property Value Type Description System.String"
  },
  "api/modulight/Modulight.Modules.ModuleDependencyAttribute.html": {
    "href": "api/modulight/Modulight.Modules.ModuleDependencyAttribute.html",
    "title": "Class ModuleDependencyAttribute | Delights",
    "keywords": "Class ModuleDependencyAttribute Specifies the dependency for the module. Inheritance System.Object System.Attribute ModuleDependencyAttribute Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Modulight.Modules Assembly : Modulight.Modules.Core.dll Syntax [AttributeUsage(AttributeTargets.Class, AllowMultiple = true, Inherited = true)] public class ModuleDependencyAttribute : Attribute Constructors ModuleDependencyAttribute(Type) Specifies the dependency for the module. Declaration public ModuleDependencyAttribute(Type moduleType) Parameters Type Name Description System.Type moduleType The dependency module type. It must implement IModule . Properties ModuleType The dependency module type. It must implement IModule . Declaration public Type ModuleType { get; } Property Value Type Description System.Type"
  },
  "api/modulight/Modulight.Modules.ModuleExtensions.html": {
    "href": "api/modulight/Modulight.Modules.ModuleExtensions.html",
    "title": "Class ModuleExtensions | Delights",
    "keywords": "Class ModuleExtensions Extension methods for modules. Inheritance System.Object ModuleExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Modulight.Modules Assembly : Modulight.Modules.Core.dll Syntax public static class ModuleExtensions Methods AllSpecifyModules<T>(IEnumerable<IModule>) Get all modules in given type. Declaration public static IEnumerable<T> AllSpecifyModules<T>(this IEnumerable<IModule> this) Parameters Type Name Description System.Collections.Generic.IEnumerable < IModule > this Module list. Returns Type Description System.Collections.Generic.IEnumerable <T> Type Parameters Name Description T Target module type. EnsureModule(Type) Ensure a type is a module type. Declaration public static void EnsureModule(this Type type) Parameters Type Name Description System.Type type EnsureModule<T>(Type) Ensure a type is a specified module type. Declaration public static void EnsureModule<T>(this Type type) where T : IModule Parameters Type Name Description System.Type type Type Parameters Name Description T EnsureModuleStartup(Type) Ensure a type is a module startup type. Declaration public static void EnsureModuleStartup(this Type type) Parameters Type Name Description System.Type type EnsureModuleStartup<T>(Type) Ensure a type is a specified module startup type. Declaration public static void EnsureModuleStartup<T>(this Type type) where T : IModuleStartup Parameters Type Name Description System.Type type Type Parameters Name Description T GetAssemblyName(Type) Get assembly name from type. Declaration public static string GetAssemblyName(this Type type) Parameters Type Name Description System.Type type Returns Type Description System.String IsModule(Type, Type) Test a type is a module type. Declaration public static bool IsModule(this Type type, Type moduleType = null) Parameters Type Name Description System.Type type System.Type moduleType Returns Type Description System.Boolean IsModule<T>(Type) Test a type is a specified module type. Declaration public static bool IsModule<T>(this Type type) where T : IModule Parameters Type Name Description System.Type type Returns Type Description System.Boolean Type Parameters Name Description T IsModuleStartup(Type) Test a type is a module startup type. Declaration public static bool IsModuleStartup(this Type type) Parameters Type Name Description System.Type type Returns Type Description System.Boolean IsModuleStartup<T>(Type) Test a type is a specified module startup type. Declaration public static bool IsModuleStartup<T>(this Type type) where T : IModuleStartup Parameters Type Name Description System.Type type Returns Type Description System.Boolean Type Parameters Name Description T WithDefaultsFromModuleType(IModuleManifestBuilder, Type) Configure the builder by default from attributes. Declaration public static IModuleManifestBuilder WithDefaultsFromModuleType(this IModuleManifestBuilder builder, Type type) Parameters Type Name Description IModuleManifestBuilder builder System.Type type Returns Type Description IModuleManifestBuilder WithDependency(IModuleManifestBuilder, Type) Add dependency to manifest. Declaration public static IModuleManifestBuilder WithDependency(this IModuleManifestBuilder builder, Type type) Parameters Type Name Description IModuleManifestBuilder builder System.Type type Returns Type Description IModuleManifestBuilder WithDependency<T>(IModuleManifestBuilder) Add dependency to manifest. Declaration public static IModuleManifestBuilder WithDependency<T>(this IModuleManifestBuilder builder) where T : IModule Parameters Type Name Description IModuleManifestBuilder builder Returns Type Description IModuleManifestBuilder Type Parameters Name Description T WithOption(IModuleManifestBuilder, Type) Add option to manifest. Declaration public static IModuleManifestBuilder WithOption(this IModuleManifestBuilder builder, Type type) Parameters Type Name Description IModuleManifestBuilder builder System.Type type Returns Type Description IModuleManifestBuilder WithOption<T>(IModuleManifestBuilder) Add option to manifest. Declaration public static IModuleManifestBuilder WithOption<T>(this IModuleManifestBuilder builder) Parameters Type Name Description IModuleManifestBuilder builder Returns Type Description IModuleManifestBuilder Type Parameters Name Description T WithService(IModuleManifestBuilder, ModuleServiceDescriptor) Add service to manifest. Declaration public static IModuleManifestBuilder WithService(this IModuleManifestBuilder builder, ModuleServiceDescriptor descriptor) Parameters Type Name Description IModuleManifestBuilder builder ModuleServiceDescriptor descriptor Returns Type Description IModuleManifestBuilder"
  },
  "api/modulight/Modulight.Modules.ModuleOptionAttribute.html": {
    "href": "api/modulight/Modulight.Modules.ModuleOptionAttribute.html",
    "title": "Class ModuleOptionAttribute | Delights",
    "keywords": "Class ModuleOptionAttribute Specifies the option for the module. Inheritance System.Object System.Attribute ModuleOptionAttribute Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Modulight.Modules Assembly : Modulight.Modules.Core.dll Syntax [AttributeUsage(AttributeTargets.Class, AllowMultiple = true, Inherited = false)] public class ModuleOptionAttribute : Attribute Constructors ModuleOptionAttribute(Type) Specifies the option for the module. Declaration public ModuleOptionAttribute(Type optionType) Parameters Type Name Description System.Type optionType Type for the option. Properties OptionType Type for the option. Declaration public Type OptionType { get; } Property Value Type Description System.Type"
  },
  "api/modulight/Modulight.Modules.ModuleServiceAttribute.html": {
    "href": "api/modulight/Modulight.Modules.ModuleServiceAttribute.html",
    "title": "Class ModuleServiceAttribute | Delights",
    "keywords": "Class ModuleServiceAttribute Specifies the service for the module. Inheritance System.Object System.Attribute ModuleServiceAttribute Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Modulight.Modules Assembly : Modulight.Modules.Core.dll Syntax [AttributeUsage(AttributeTargets.Class, AllowMultiple = true, Inherited = false)] public class ModuleServiceAttribute : Attribute Constructors ModuleServiceAttribute(Type) Specifies the service for the module. Declaration public ModuleServiceAttribute(Type implementationType) Parameters Type Name Description System.Type implementationType The implementation type. Properties ImplementationType The implementation type. Declaration public Type ImplementationType { get; } Property Value Type Description System.Type Lifetime Service lifetime (default as Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped ). Declaration public ServiceLifetime Lifetime { get; } Property Value Type Description Microsoft.Extensions.DependencyInjection.ServiceLifetime RegisterBehavior Behavior when the service been added. Declaration public ServiceRegisterBehavior RegisterBehavior { get; } Property Value Type Description ServiceRegisterBehavior ServiceType The service type. Null to use the implement type. Declaration public Type ServiceType { get; } Property Value Type Description System.Type"
  },
  "api/modulight/Modulight.Modules.ModuleStartup.html": {
    "href": "api/modulight/Modulight.Modules.ModuleStartup.html",
    "title": "Class ModuleStartup | Delights",
    "keywords": "Class ModuleStartup Empty implementation for IModuleStartup . Inheritance System.Object ModuleStartup GraphQLServerModuleStartup Implements IModuleStartup Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Modulight.Modules Assembly : Modulight.Modules.Core.dll Syntax public abstract class ModuleStartup : IModuleStartup Methods ConfigureManifest(IModuleManifestBuilder) Configure the module manifest. Declaration public virtual void ConfigureManifest(IModuleManifestBuilder builder) Parameters Type Name Description IModuleManifestBuilder builder ConfigureServices(IServiceCollection) Configure the target services. Declaration public virtual void ConfigureServices(IServiceCollection services) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services Implements IModuleStartup"
  },
  "api/modulight/Modulight.Modules.ModuleStartupAttribute.html": {
    "href": "api/modulight/Modulight.Modules.ModuleStartupAttribute.html",
    "title": "Class ModuleStartupAttribute | Delights",
    "keywords": "Class ModuleStartupAttribute Specifies the startup for the module. Inheritance System.Object System.Attribute ModuleStartupAttribute Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Modulight.Modules Assembly : Modulight.Modules.Core.dll Syntax [AttributeUsage(AttributeTargets.Class, AllowMultiple = false, Inherited = false)] public class ModuleStartupAttribute : Attribute Constructors ModuleStartupAttribute(Type) Specifies the startup for the module. Declaration public ModuleStartupAttribute(Type startupType) Parameters Type Name Description System.Type startupType The startup type. It must implement IModuleStartup . Properties StartupType The startup type. It must implement IModuleStartup . Declaration public Type StartupType { get; } Property Value Type Description System.Type"
  },
  "api/modulight/Modulight.Modules.Server.AspNet.AspNetServerModule.html": {
    "href": "api/modulight/Modulight.Modules.Server.AspNet.AspNetServerModule.html",
    "title": "Class AspNetServerModule | Delights",
    "keywords": "Class AspNetServerModule Basic implement for IAspNetServerModule Inheritance System.Object Module AspNetServerModule Implements IAspNetServerModule IModule Inherited Members Module.Host Module.Services Module.Manifest Module.GetService<T>(IServiceProvider) Module.GetOption<T>(IServiceProvider) Module.Initialize() Module.Shutdown() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Modulight.Modules.Server.AspNet Assembly : Modulight.Modules.Server.AspNet.dll Syntax [ModuleDependency(typeof(AspnetServerCoreModule))] public abstract class AspNetServerModule : Module, IAspNetServerModule, IModule Constructors AspNetServerModule(IModuleHost) Create the instance. Declaration protected AspNetServerModule(IModuleHost host) Parameters Type Name Description IModuleHost host Methods MapEndpoint(IEndpointRouteBuilder) Map all registered module's endpoints. Used in Microsoft.AspNetCore.Builder.EndpointRoutingApplicationBuilderExtensions.UseEndpoints(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Action{Microsoft.AspNetCore.Routing.IEndpointRouteBuilder}) . Declaration public virtual void MapEndpoint(IEndpointRouteBuilder builder) Parameters Type Name Description Microsoft.AspNetCore.Routing.IEndpointRouteBuilder builder UseMiddleware(IApplicationBuilder) Use all registered module's middlewares. Used for Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.UseMiddleware(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Type,System.Object[]) Declaration public virtual void UseMiddleware(IApplicationBuilder builder) Parameters Type Name Description Microsoft.AspNetCore.Builder.IApplicationBuilder builder Implements IAspNetServerModule IModule"
  },
  "api/modulight/Modulight.Modules.Server.AspNet.AspNetServerModuleExtensions.html": {
    "href": "api/modulight/Modulight.Modules.Server.AspNet.AspNetServerModuleExtensions.html",
    "title": "Class AspNetServerModuleExtensions | Delights",
    "keywords": "Class AspNetServerModuleExtensions Extension methods for aspnet modules. Inheritance System.Object AspNetServerModuleExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Modulight.Modules.Server.AspNet Assembly : Modulight.Modules.Server.AspNet.dll Syntax public static class AspNetServerModuleExtensions Methods GetAspNetServerModuleCollection(IServiceProvider) Get aspnet module host from service provider. Declaration public static IAspNetServerModuleCollection GetAspNetServerModuleCollection(this IServiceProvider provider) Parameters Type Name Description System.IServiceProvider provider Returns Type Description IAspNetServerModuleCollection MapAspNetServerModuleEndpoints(IEndpointRouteBuilder) Map all registered aspnet server module's endpoints. Declaration public static IEndpointRouteBuilder MapAspNetServerModuleEndpoints(this IEndpointRouteBuilder builder) Parameters Type Name Description Microsoft.AspNetCore.Routing.IEndpointRouteBuilder builder Returns Type Description Microsoft.AspNetCore.Routing.IEndpointRouteBuilder UseAspNetServerModuleMiddlewares(IApplicationBuilder) Use all registered aspnet server module's middlewares. Declaration public static IApplicationBuilder UseAspNetServerModuleMiddlewares(this IApplicationBuilder builder) Parameters Type Name Description Microsoft.AspNetCore.Builder.IApplicationBuilder builder Returns Type Description Microsoft.AspNetCore.Builder.IApplicationBuilder"
  },
  "api/modulight/Modulight.Modules.Server.AspNet.html": {
    "href": "api/modulight/Modulight.Modules.Server.AspNet.html",
    "title": "Namespace Modulight.Modules.Server.AspNet | Delights",
    "keywords": "Namespace Modulight.Modules.Server.AspNet Classes AspNetServerModule Basic implement for IAspNetServerModule AspNetServerModuleExtensions Extension methods for aspnet modules. Interfaces IAspNetServerModule Specifies the contract for aspnet modules. IAspNetServerModuleCollection Specifies the contract for aspnet module hosts."
  },
  "api/modulight/Modulight.Modules.Server.AspNet.IAspNetServerModule.html": {
    "href": "api/modulight/Modulight.Modules.Server.AspNet.IAspNetServerModule.html",
    "title": "Interface IAspNetServerModule | Delights",
    "keywords": "Interface IAspNetServerModule Specifies the contract for aspnet modules. Inherited Members IModule.Initialize() IModule.Shutdown() IModule.Manifest Namespace : Modulight.Modules.Server.AspNet Assembly : Modulight.Modules.Server.AspNet.dll Syntax public interface IAspNetServerModule : IModule Methods MapEndpoint(IEndpointRouteBuilder) Map all registered module's endpoints. Used in Microsoft.AspNetCore.Builder.EndpointRoutingApplicationBuilderExtensions.UseEndpoints(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Action{Microsoft.AspNetCore.Routing.IEndpointRouteBuilder}) . Declaration void MapEndpoint(IEndpointRouteBuilder builder) Parameters Type Name Description Microsoft.AspNetCore.Routing.IEndpointRouteBuilder builder UseMiddleware(IApplicationBuilder) Use all registered module's middlewares. Used for Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.UseMiddleware(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Type,System.Object[]) Declaration void UseMiddleware(IApplicationBuilder builder) Parameters Type Name Description Microsoft.AspNetCore.Builder.IApplicationBuilder builder"
  },
  "api/modulight/Modulight.Modules.Server.AspNet.IAspNetServerModuleCollection.html": {
    "href": "api/modulight/Modulight.Modules.Server.AspNet.IAspNetServerModuleCollection.html",
    "title": "Interface IAspNetServerModuleCollection | Delights",
    "keywords": "Interface IAspNetServerModuleCollection Specifies the contract for aspnet module hosts. Inherited Members IModuleCollection<IAspNetServerModule>.LoadedModules IModuleCollection<IAspNetServerModule>.DefinedModules Namespace : Modulight.Modules.Server.AspNet Assembly : Modulight.Modules.Server.AspNet.dll Syntax public interface IAspNetServerModuleCollection : IModuleCollection<IAspNetServerModule> Methods MapEndpoints(IEndpointRouteBuilder, Action<IAspNetServerModule, IEndpointRouteBuilder>) Map all registered module's endpoints. Used in Microsoft.AspNetCore.Builder.EndpointRoutingApplicationBuilderExtensions.UseEndpoints(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Action{Microsoft.AspNetCore.Routing.IEndpointRouteBuilder}) . Declaration void MapEndpoints(IEndpointRouteBuilder builder, Action<IAspNetServerModule, IEndpointRouteBuilder> postMapEndpoint = null) Parameters Type Name Description Microsoft.AspNetCore.Routing.IEndpointRouteBuilder builder System.Action < IAspNetServerModule , Microsoft.AspNetCore.Routing.IEndpointRouteBuilder > postMapEndpoint Action to configure mapped GraphQL endpoints. UseMiddlewares(IApplicationBuilder) Use all registered module's middlewares. Used for Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.UseMiddleware(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Type,System.Object[]) Declaration void UseMiddlewares(IApplicationBuilder builder) Parameters Type Name Description Microsoft.AspNetCore.Builder.IApplicationBuilder builder"
  },
  "api/modulight/Modulight.Modules.Server.GraphQL.GraphQLModuleTypeAttribute.html": {
    "href": "api/modulight/Modulight.Modules.Server.GraphQL.GraphQLModuleTypeAttribute.html",
    "title": "Class GraphQLModuleTypeAttribute | Delights",
    "keywords": "Class GraphQLModuleTypeAttribute Specifies the object types for GraphQL server. Inheritance System.Object System.Attribute GraphQLModuleTypeAttribute Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Modulight.Modules.Server.GraphQL Assembly : Modulight.Modules.Server.GraphQL.dll Syntax [AttributeUsage(AttributeTargets.Class, AllowMultiple = false, Inherited = false)] public class GraphQLModuleTypeAttribute : Attribute Constructors GraphQLModuleTypeAttribute(String) Specifies the object types for GraphQL server. Declaration public GraphQLModuleTypeAttribute(string schemaName) Parameters Type Name Description System.String schemaName Schema name. GraphQLModuleTypeAttribute(String, Type) Specifies the object types for GraphQL server. Declaration public GraphQLModuleTypeAttribute(string schemaName, Type queryType) Parameters Type Name Description System.String schemaName Schema name. System.Type queryType Query type. Properties Endpoint Endpoint (default as /graphql/ SchemaName ). Declaration public string Endpoint { get; } Property Value Type Description System.String MutationType Mutation type for Microsoft.Extensions.DependencyInjection.SchemaRequestExecutorBuilderExtensions.AddMutationType(HotChocolate.Execution.Configuration.IRequestExecutorBuilder,System.Type) . Declaration public Type MutationType { get; } Property Value Type Description System.Type QueryType Query type for Microsoft.Extensions.DependencyInjection.SchemaRequestExecutorBuilderExtensions.AddQueryType(HotChocolate.Execution.Configuration.IRequestExecutorBuilder,System.Type) . Declaration public Type QueryType { get; } Property Value Type Description System.Type SchemaName Schema name. Declaration public string SchemaName { get; } Property Value Type Description System.String SubscriptionType Subscription type for Microsoft.Extensions.DependencyInjection.SchemaRequestExecutorBuilderExtensions.AddSubscriptionType(HotChocolate.Execution.Configuration.IRequestExecutorBuilder,System.Type) . Declaration public Type SubscriptionType { get; } Property Value Type Description System.Type"
  },
  "api/modulight/Modulight.Modules.Server.GraphQL.GraphQLServerModule.html": {
    "href": "api/modulight/Modulight.Modules.Server.GraphQL.GraphQLServerModule.html",
    "title": "Class GraphQLServerModule | Delights",
    "keywords": "Class GraphQLServerModule Basic implement for IGraphQLServerModule Inheritance System.Object Module GraphQLServerModule Implements IGraphQLServerModule IModule Inherited Members Module.Host Module.Services Module.Manifest Module.GetService<T>(IServiceProvider) Module.GetOption<T>(IServiceProvider) Module.Initialize() Module.Shutdown() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Modulight.Modules.Server.GraphQL Assembly : Modulight.Modules.Server.GraphQL.dll Syntax [ModuleDependency(typeof(GraphqlServerCoreModule))] public abstract class GraphQLServerModule : Module, IGraphQLServerModule, IModule Constructors GraphQLServerModule(IModuleHost) Create the instance. Declaration protected GraphQLServerModule(IModuleHost host) Parameters Type Name Description IModuleHost host Methods MapEndpoint(IEndpointRouteBuilder) Map graphql endpoints. Used in Microsoft.AspNetCore.Builder.EndpointRoutingApplicationBuilderExtensions.UseEndpoints(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Action{Microsoft.AspNetCore.Routing.IEndpointRouteBuilder}) . Declaration public virtual GraphQLEndpointConventionBuilder MapEndpoint(IEndpointRouteBuilder builder) Parameters Type Name Description Microsoft.AspNetCore.Routing.IEndpointRouteBuilder builder Returns Type Description HotChocolate.AspNetCore.Extensions.GraphQLEndpointConventionBuilder Implements IGraphQLServerModule IModule"
  },
  "api/modulight/Modulight.Modules.Server.GraphQL.GraphQLServerModuleExtensions.html": {
    "href": "api/modulight/Modulight.Modules.Server.GraphQL.GraphQLServerModuleExtensions.html",
    "title": "Class GraphQLServerModuleExtensions | Delights",
    "keywords": "Class GraphQLServerModuleExtensions Extension methods for graphql modules. Inheritance System.Object GraphQLServerModuleExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Modulight.Modules.Server.GraphQL Assembly : Modulight.Modules.Server.GraphQL.dll Syntax public static class GraphQLServerModuleExtensions Methods GetGraphQLServerModuleCollection(IServiceProvider) Get graphql module host from service provider. Declaration public static IGraphQLServerModuleCollection GetGraphQLServerModuleCollection(this IServiceProvider provider) Parameters Type Name Description System.IServiceProvider provider Returns Type Description IGraphQLServerModuleCollection MapGraphQLServerModuleEndpoints(IEndpointRouteBuilder, Action<IGraphQLServerModule, GraphQLEndpointConventionBuilder>) Map all registered graphql server module's endpoints. Declaration public static IEndpointRouteBuilder MapGraphQLServerModuleEndpoints(this IEndpointRouteBuilder builder, Action<IGraphQLServerModule, GraphQLEndpointConventionBuilder> postMapEndpoint = null) Parameters Type Name Description Microsoft.AspNetCore.Routing.IEndpointRouteBuilder builder System.Action < IGraphQLServerModule , HotChocolate.AspNetCore.Extensions.GraphQLEndpointConventionBuilder > postMapEndpoint Action to configure mapped GraphQL endpoints. Returns Type Description Microsoft.AspNetCore.Routing.IEndpointRouteBuilder UseGraphQLServerModules(IModuleHostBuilder) Use building middlewares for graphql modules. It will register IGraphQLServerModuleCollection service. Declaration public static IModuleHostBuilder UseGraphQLServerModules(this IModuleHostBuilder modules) Parameters Type Name Description IModuleHostBuilder modules Returns Type Description IModuleHostBuilder"
  },
  "api/modulight/Modulight.Modules.Server.GraphQL.GraphQLServerModuleStartup.html": {
    "href": "api/modulight/Modulight.Modules.Server.GraphQL.GraphQLServerModuleStartup.html",
    "title": "Class GraphQLServerModuleStartup | Delights",
    "keywords": "Class GraphQLServerModuleStartup Empty implementation for IGraphQLServerModuleStartup . Inheritance System.Object ModuleStartup GraphQLServerModuleStartup Implements IGraphQLServerModuleStartup IModuleStartup Inherited Members ModuleStartup.ConfigureManifest(IModuleManifestBuilder) ModuleStartup.ConfigureServices(IServiceCollection) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Modulight.Modules.Server.GraphQL Assembly : Modulight.Modules.Server.GraphQL.dll Syntax public abstract class GraphQLServerModuleStartup : ModuleStartup, IGraphQLServerModuleStartup, IModuleStartup Methods ConfigureGraphQLSchema(IRequestExecutorBuilder) Configure the graphql schema. The module needs GraphQLModuleTypeAttribute . Declaration public virtual void ConfigureGraphQLSchema(IRequestExecutorBuilder builder) Parameters Type Name Description HotChocolate.Execution.Configuration.IRequestExecutorBuilder builder Implements IGraphQLServerModuleStartup IModuleStartup"
  },
  "api/modulight/Modulight.Modules.Server.GraphQL.html": {
    "href": "api/modulight/Modulight.Modules.Server.GraphQL.html",
    "title": "Namespace Modulight.Modules.Server.GraphQL | Delights",
    "keywords": "Namespace Modulight.Modules.Server.GraphQL Classes GraphQLModuleTypeAttribute Specifies the object types for GraphQL server. GraphQLServerModule Basic implement for IGraphQLServerModule GraphQLServerModuleExtensions Extension methods for graphql modules. GraphQLServerModuleStartup Empty implementation for IGraphQLServerModuleStartup . Interfaces IGraphQLServerModule Specifies the contract for graphql modules. IGraphQLServerModuleCollection Specifies the contract for graphql module hosts. IGraphQLServerModuleStartup Startup for graphql server module."
  },
  "api/modulight/Modulight.Modules.Server.GraphQL.IGraphQLServerModule.html": {
    "href": "api/modulight/Modulight.Modules.Server.GraphQL.IGraphQLServerModule.html",
    "title": "Interface IGraphQLServerModule | Delights",
    "keywords": "Interface IGraphQLServerModule Specifies the contract for graphql modules. Inherited Members IModule.Initialize() IModule.Shutdown() IModule.Manifest Namespace : Modulight.Modules.Server.GraphQL Assembly : Modulight.Modules.Server.GraphQL.dll Syntax public interface IGraphQLServerModule : IModule Methods MapEndpoint(IEndpointRouteBuilder) Map graphql endpoints. Used in Microsoft.AspNetCore.Builder.EndpointRoutingApplicationBuilderExtensions.UseEndpoints(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Action{Microsoft.AspNetCore.Routing.IEndpointRouteBuilder}) . Declaration GraphQLEndpointConventionBuilder MapEndpoint(IEndpointRouteBuilder builder) Parameters Type Name Description Microsoft.AspNetCore.Routing.IEndpointRouteBuilder builder Returns Type Description HotChocolate.AspNetCore.Extensions.GraphQLEndpointConventionBuilder"
  },
  "api/modulight/Modulight.Modules.Server.GraphQL.IGraphQLServerModuleCollection.html": {
    "href": "api/modulight/Modulight.Modules.Server.GraphQL.IGraphQLServerModuleCollection.html",
    "title": "Interface IGraphQLServerModuleCollection | Delights",
    "keywords": "Interface IGraphQLServerModuleCollection Specifies the contract for graphql module hosts. Inherited Members IModuleCollection<IGraphQLServerModule>.LoadedModules IModuleCollection<IGraphQLServerModule>.DefinedModules Namespace : Modulight.Modules.Server.GraphQL Assembly : Modulight.Modules.Server.GraphQL.dll Syntax public interface IGraphQLServerModuleCollection : IModuleCollection<IGraphQLServerModule> Methods MapEndpoints(IEndpointRouteBuilder, Action<IGraphQLServerModule, GraphQLEndpointConventionBuilder>) Map all registered module's endpoints. Used in Microsoft.AspNetCore.Builder.EndpointRoutingApplicationBuilderExtensions.UseEndpoints(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Action{Microsoft.AspNetCore.Routing.IEndpointRouteBuilder}) . Declaration void MapEndpoints(IEndpointRouteBuilder builder, Action<IGraphQLServerModule, GraphQLEndpointConventionBuilder> postMapEndpoint = null) Parameters Type Name Description Microsoft.AspNetCore.Routing.IEndpointRouteBuilder builder System.Action < IGraphQLServerModule , HotChocolate.AspNetCore.Extensions.GraphQLEndpointConventionBuilder > postMapEndpoint Action to configure mapped GraphQL endpoints."
  },
  "api/modulight/Modulight.Modules.Server.GraphQL.IGraphQLServerModuleStartup.html": {
    "href": "api/modulight/Modulight.Modules.Server.GraphQL.IGraphQLServerModuleStartup.html",
    "title": "Interface IGraphQLServerModuleStartup | Delights",
    "keywords": "Interface IGraphQLServerModuleStartup Startup for graphql server module. Inherited Members IModuleStartup.ConfigureServices(IServiceCollection) IModuleStartup.ConfigureManifest(IModuleManifestBuilder) Namespace : Modulight.Modules.Server.GraphQL Assembly : Modulight.Modules.Server.GraphQL.dll Syntax public interface IGraphQLServerModuleStartup : IModuleStartup Methods ConfigureGraphQLSchema(IRequestExecutorBuilder) Configure the graphql schema. The module needs GraphQLModuleTypeAttribute . Declaration void ConfigureGraphQLSchema(IRequestExecutorBuilder builder) Parameters Type Name Description HotChocolate.Execution.Configuration.IRequestExecutorBuilder builder"
  },
  "api/modulight/Modulight.Modules.ServiceRegisterBehavior.html": {
    "href": "api/modulight/Modulight.Modules.ServiceRegisterBehavior.html",
    "title": "Enum ServiceRegisterBehavior | Delights",
    "keywords": "Enum ServiceRegisterBehavior Behavior when the service been added. Namespace : Modulight.Modules Assembly : Modulight.Modules.Core.dll Syntax public enum ServiceRegisterBehavior Fields Name Description Normal Normal (Use Add). Optional The service is optional (Use TryAdd)."
  },
  "api/modulight/Modulight.Modules.Test.Context.AspNetServerModuleTestContext.html": {
    "href": "api/modulight/Modulight.Modules.Test.Context.AspNetServerModuleTestContext.html",
    "title": "Class AspNetServerModuleTestContext | Delights",
    "keywords": "Class AspNetServerModuleTestContext Inheritance System.Object ModuleTestContext AspNetServerModuleTestContext AspNetServerModuleTestContext<T> Inherited Members ModuleTestContext.Builder ModuleTestContext.WithModule<T>() ModuleTestContext.WithPlugin<T>() ModuleTestContext.ConfigureBuilder(Action<IModuleHostBuilder>) ModuleTestContext.CheckStartup(Type, Type) ModuleTestContext.CheckStartup<TModule, TStartup>() ModuleTestContext.BuildAsync(Func<IModuleHost, Task>) ModuleTestContext.UseHostAsync(Func<IModuleHost, Task>) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Modulight.Modules.Test.Context Assembly : Modulight.Modules.Test.dll Syntax public class AspNetServerModuleTestContext : ModuleTestContext Constructors AspNetServerModuleTestContext() Declaration public AspNetServerModuleTestContext()"
  },
  "api/modulight/Modulight.Modules.Test.Context.AspNetServerModuleTestContext-1.html": {
    "href": "api/modulight/Modulight.Modules.Test.Context.AspNetServerModuleTestContext-1.html",
    "title": "Class AspNetServerModuleTestContext<T> | Delights",
    "keywords": "Class AspNetServerModuleTestContext<T> Inheritance System.Object ModuleTestContext AspNetServerModuleTestContext AspNetServerModuleTestContext<T> Inherited Members ModuleTestContext.Builder ModuleTestContext.WithModule<T>() ModuleTestContext.WithPlugin<T>() ModuleTestContext.ConfigureBuilder(Action<IModuleHostBuilder>) ModuleTestContext.CheckStartup(Type, Type) ModuleTestContext.CheckStartup<TModule, TStartup>() ModuleTestContext.BuildAsync(Func<IModuleHost, Task>) ModuleTestContext.UseHostAsync(Func<IModuleHost, Task>) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Modulight.Modules.Test.Context Assembly : Modulight.Modules.Test.dll Syntax public class AspNetServerModuleTestContext<T> : AspNetServerModuleTestContext where T : IAspNetServerModule Type Parameters Name Description T Constructors AspNetServerModuleTestContext() Declaration public AspNetServerModuleTestContext()"
  },
  "api/modulight/Modulight.Modules.Test.Context.ContextExtensions.html": {
    "href": "api/modulight/Modulight.Modules.Test.Context.ContextExtensions.html",
    "title": "Class ContextExtensions | Delights",
    "keywords": "Class ContextExtensions Inheritance System.Object ContextExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Modulight.Modules.Test.Context Assembly : Modulight.Modules.Test.dll Syntax public static class ContextExtensions Methods GetBuilderLog(IModuleHost) Declaration public static ModuleHostBuilderLog GetBuilderLog(this IModuleHost host) Parameters Type Name Description IModuleHost host Returns Type Description ModuleHostBuilderLog"
  },
  "api/modulight/Modulight.Modules.Test.Context.GraphQLServerModuleTestContext.html": {
    "href": "api/modulight/Modulight.Modules.Test.Context.GraphQLServerModuleTestContext.html",
    "title": "Class GraphQLServerModuleTestContext | Delights",
    "keywords": "Class GraphQLServerModuleTestContext Inheritance System.Object ModuleTestContext GraphQLServerModuleTestContext GraphQLServerModuleTestContext<T> Inherited Members ModuleTestContext.Builder ModuleTestContext.WithModule<T>() ModuleTestContext.WithPlugin<T>() ModuleTestContext.ConfigureBuilder(Action<IModuleHostBuilder>) ModuleTestContext.CheckStartup(Type, Type) ModuleTestContext.CheckStartup<TModule, TStartup>() ModuleTestContext.BuildAsync(Func<IModuleHost, Task>) ModuleTestContext.UseHostAsync(Func<IModuleHost, Task>) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Modulight.Modules.Test.Context Assembly : Modulight.Modules.Test.dll Syntax public class GraphQLServerModuleTestContext : ModuleTestContext Constructors GraphQLServerModuleTestContext() Declaration public GraphQLServerModuleTestContext()"
  },
  "api/modulight/Modulight.Modules.Test.Context.GraphQLServerModuleTestContext-1.html": {
    "href": "api/modulight/Modulight.Modules.Test.Context.GraphQLServerModuleTestContext-1.html",
    "title": "Class GraphQLServerModuleTestContext<T> | Delights",
    "keywords": "Class GraphQLServerModuleTestContext<T> Inheritance System.Object ModuleTestContext GraphQLServerModuleTestContext GraphQLServerModuleTestContext<T> Inherited Members ModuleTestContext.Builder ModuleTestContext.WithModule<T>() ModuleTestContext.WithPlugin<T>() ModuleTestContext.ConfigureBuilder(Action<IModuleHostBuilder>) ModuleTestContext.CheckStartup(Type, Type) ModuleTestContext.CheckStartup<TModule, TStartup>() ModuleTestContext.BuildAsync(Func<IModuleHost, Task>) ModuleTestContext.UseHostAsync(Func<IModuleHost, Task>) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Modulight.Modules.Test.Context Assembly : Modulight.Modules.Test.dll Syntax public class GraphQLServerModuleTestContext<T> : GraphQLServerModuleTestContext where T : IGraphQLServerModule Type Parameters Name Description T Constructors GraphQLServerModuleTestContext() Declaration public GraphQLServerModuleTestContext()"
  },
  "api/modulight/Modulight.Modules.Test.Context.html": {
    "href": "api/modulight/Modulight.Modules.Test.Context.html",
    "title": "Namespace Modulight.Modules.Test.Context | Delights",
    "keywords": "Namespace Modulight.Modules.Test.Context Classes AspNetServerModuleTestContext AspNetServerModuleTestContext<T> ContextExtensions GraphQLServerModuleTestContext GraphQLServerModuleTestContext<T> ModuleTestContext RazorComponentClientModuleTestContext RazorComponentClientModuleTestContext<T>"
  },
  "api/modulight/Modulight.Modules.Test.Context.ModuleTestContext.html": {
    "href": "api/modulight/Modulight.Modules.Test.Context.ModuleTestContext.html",
    "title": "Class ModuleTestContext | Delights",
    "keywords": "Class ModuleTestContext Inheritance System.Object ModuleTestContext AspNetServerModuleTestContext GraphQLServerModuleTestContext RazorComponentClientModuleTestContext Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Modulight.Modules.Test.Context Assembly : Modulight.Modules.Test.dll Syntax public class ModuleTestContext Constructors ModuleTestContext() Declaration public ModuleTestContext() Properties Builder Declaration protected IModuleHostBuilder Builder { get; } Property Value Type Description IModuleHostBuilder Methods BuildAsync(Func<IModuleHost, Task>) Declaration public Task BuildAsync(Func<IModuleHost, Task> action) Parameters Type Name Description System.Func < IModuleHost , System.Threading.Tasks.Task > action Returns Type Description System.Threading.Tasks.Task CheckStartup(Type, Type) Declaration public ModuleTestContext CheckStartup(Type moduleType, Type startupType) Parameters Type Name Description System.Type moduleType System.Type startupType Returns Type Description ModuleTestContext CheckStartup<TModule, TStartup>() Declaration public ModuleTestContext CheckStartup<TModule, TStartup>() where TModule : IModule where TStartup : IModuleStartup Returns Type Description ModuleTestContext Type Parameters Name Description TModule TStartup ConfigureBuilder(Action<IModuleHostBuilder>) Declaration public ModuleTestContext ConfigureBuilder(Action<IModuleHostBuilder> builder) Parameters Type Name Description System.Action < IModuleHostBuilder > builder Returns Type Description ModuleTestContext UseHostAsync(Func<IModuleHost, Task>) Declaration public Task UseHostAsync(Func<IModuleHost, Task> action = null) Parameters Type Name Description System.Func < IModuleHost , System.Threading.Tasks.Task > action Returns Type Description System.Threading.Tasks.Task WithModule<T>() Declaration public ModuleTestContext WithModule<T>() where T : IModule Returns Type Description ModuleTestContext Type Parameters Name Description T WithPlugin<T>() Declaration public ModuleTestContext WithPlugin<T>() where T : IModuleHostBuilderPlugin Returns Type Description ModuleTestContext Type Parameters Name Description T"
  },
  "api/modulight/Modulight.Modules.Test.Context.RazorComponentClientModuleTestContext.html": {
    "href": "api/modulight/Modulight.Modules.Test.Context.RazorComponentClientModuleTestContext.html",
    "title": "Class RazorComponentClientModuleTestContext | Delights",
    "keywords": "Class RazorComponentClientModuleTestContext Inheritance System.Object ModuleTestContext RazorComponentClientModuleTestContext RazorComponentClientModuleTestContext<T> Inherited Members ModuleTestContext.Builder ModuleTestContext.WithModule<T>() ModuleTestContext.WithPlugin<T>() ModuleTestContext.ConfigureBuilder(Action<IModuleHostBuilder>) ModuleTestContext.CheckStartup(Type, Type) ModuleTestContext.CheckStartup<TModule, TStartup>() ModuleTestContext.BuildAsync(Func<IModuleHost, Task>) ModuleTestContext.UseHostAsync(Func<IModuleHost, Task>) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Modulight.Modules.Test.Context Assembly : Modulight.Modules.Test.dll Syntax public class RazorComponentClientModuleTestContext : ModuleTestContext Constructors RazorComponentClientModuleTestContext() Declaration public RazorComponentClientModuleTestContext()"
  },
  "api/modulight/Modulight.Modules.Test.Context.RazorComponentClientModuleTestContext-1.html": {
    "href": "api/modulight/Modulight.Modules.Test.Context.RazorComponentClientModuleTestContext-1.html",
    "title": "Class RazorComponentClientModuleTestContext<T> | Delights",
    "keywords": "Class RazorComponentClientModuleTestContext<T> Inheritance System.Object ModuleTestContext RazorComponentClientModuleTestContext RazorComponentClientModuleTestContext<T> Inherited Members ModuleTestContext.Builder ModuleTestContext.WithModule<T>() ModuleTestContext.WithPlugin<T>() ModuleTestContext.ConfigureBuilder(Action<IModuleHostBuilder>) ModuleTestContext.CheckStartup(Type, Type) ModuleTestContext.CheckStartup<TModule, TStartup>() ModuleTestContext.BuildAsync(Func<IModuleHost, Task>) ModuleTestContext.UseHostAsync(Func<IModuleHost, Task>) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Modulight.Modules.Test.Context Assembly : Modulight.Modules.Test.dll Syntax public class RazorComponentClientModuleTestContext<T> : RazorComponentClientModuleTestContext where T : IRazorComponentClientModule Type Parameters Name Description T Constructors RazorComponentClientModuleTestContext() Declaration public RazorComponentClientModuleTestContext()"
  },
  "api/modulight/Modulight.Modules.Test.html": {
    "href": "api/modulight/Modulight.Modules.Test.html",
    "title": "Namespace Modulight.Modules.Test | Delights",
    "keywords": "Namespace Modulight.Modules.Test Classes ModuleHostAssert"
  },
  "api/modulight/Modulight.Modules.Test.ModuleHostAssert.html": {
    "href": "api/modulight/Modulight.Modules.Test.ModuleHostAssert.html",
    "title": "Class ModuleHostAssert | Delights",
    "keywords": "Class ModuleHostAssert Inheritance System.Object ModuleHostAssert Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Modulight.Modules.Test Assembly : Modulight.Modules.Test.dll Syntax public static class ModuleHostAssert Methods EnsureGetLoadedModule<T>(IModuleHost) Declaration public static T EnsureGetLoadedModule<T>(this IModuleHost host) where T : IModule Parameters Type Name Description IModuleHost host Returns Type Description T Type Parameters Name Description T EnsureGetService<T>(IModuleHost) Declaration public static T EnsureGetService<T>(this IModuleHost host) Parameters Type Name Description IModuleHost host Returns Type Description T Type Parameters Name Description T HasDependencies<T>(IModuleHost) Declaration public static IModuleHost HasDependencies<T>(this IModuleHost host) where T : IModule Parameters Type Name Description IModuleHost host Returns Type Description IModuleHost Type Parameters Name Description T HasLoadedModule(IModuleHost, Type) Declaration public static IModuleHost HasLoadedModule(this IModuleHost host, Type type) Parameters Type Name Description IModuleHost host System.Type type Returns Type Description IModuleHost HasLoadedModule<T>(IModuleHost) Declaration public static IModuleHost HasLoadedModule<T>(this IModuleHost host) where T : IModule Parameters Type Name Description IModuleHost host Returns Type Description IModuleHost Type Parameters Name Description T HasModule(IModuleHost, Type) Declaration public static IModuleHost HasModule(this IModuleHost host, Type type) Parameters Type Name Description IModuleHost host System.Type type Returns Type Description IModuleHost HasModule<T>(IModuleHost) Declaration public static IModuleHost HasModule<T>(this IModuleHost host) where T : IModule Parameters Type Name Description IModuleHost host Returns Type Description IModuleHost Type Parameters Name Description T HasService(IModuleHost, Type) Declaration public static IModuleHost HasService(this IModuleHost host, Type type) Parameters Type Name Description IModuleHost host System.Type type Returns Type Description IModuleHost HasService<T>(IModuleHost) Declaration public static IModuleHost HasService<T>(this IModuleHost host) Parameters Type Name Description IModuleHost host Returns Type Description IModuleHost Type Parameters Name Description T HasServices<T>(IModuleHost) Declaration public static IModuleHost HasServices<T>(this IModuleHost host) where T : IModule Parameters Type Name Description IModuleHost host Returns Type Description IModuleHost Type Parameters Name Description T"
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Introduction | Delights",
    "keywords": "Introduction"
  },
  "index.html": {
    "href": "index.html",
    "title": "Delights | Delights",
    "keywords": "Delights Delights is my collection of useful tools in life. It's built on a light modular framework Modulight . Visit here for details about the modular framework."
  }
}